group 'com.novarto'
version '0.1-SNAPSHOT'

task wrapper(type: Wrapper) {
  gradleVersion = '3.1'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

def jackson_version = '2.7.4'

dependencies {
    compile "io.netty:netty-codec-http2:4.1.6.Final"
    testCompile group: 'junit', name: 'junit', version: '4.11'


    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jackson_version"

    compile 'org.slf4j:slf4j-api:1.7.21'
    runtime 'ch.qos.logback:logback-core:1.1.7'
    runtime 'ch.qos.logback:logback-classic:1.1.7'

}


apply plugin: "application"
mainClassName = "com.novarto.test.Main"

run {


    applicationDefaultJvmArgs += "-server"

    if(java.lang.System.getProperty("mem")!=null)
    {
        String mem = java.lang.System.getProperty("mem")
        applicationDefaultJvmArgs += ["-Xms$mem", "-Xmx$mem"]
    }

    appendToArgs("backpressure")
    appendToArgs("port")
    appendToArgs("staticSize")
    appendToArgs("io.netty.leakDetection.level")
}

private def appendToArgs(propName)
{
    def value = java.lang.System.getProperty(propName);
    if(value!=null)
    {
        if(value.isEmpty())
        {
            applicationDefaultJvmArgs += "-D${propName}"
        }
        else
        {
            applicationDefaultJvmArgs += "-D${propName}=${value}"
        }
    }
}